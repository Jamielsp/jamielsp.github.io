{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Proyecto Final \u2013 Fundamentos de Seguridad Implementar un dominio en Active Directory. Habilitar Active Directory Certificate Authority. Instalar un servidor web en Linux utilizando Apache. A\u00f1adir este servidor Linux a Active Directory. Generar un certificado utilizando ADCA. Instalar dicho certificado en su servidor Web y habilitar tr\u00e1fico mediante HTTPS. Debe redireccionar el tr\u00e1fico HTTP a HTTPS. Utilizar Nessus para escanear las vulnerabilidades de su servidor. Aplicar las soluciones recomendadas por Nessus para resolver todas las vulnerabilidades m\u00e9dium, high y critical. Objetivo En esta pr\u00e1ctica tiene como objetivo aprender los conocimientos b\u00e1sicos, de como configurar un certificado SSL por medio de la caracter\u00edstica de windows server ( Active Directory Certificate Authority ), muchas personas sabr\u00e1n hacerlo mediante lets encrypt , pero en este caso aprenderemos algo totalmente diferente pero con el mismo resultado. Definiciones Dominio: El dominio es la unidad b\u00e1sica encargada de agrupar y de permitir la eficiente gesti\u00f3n de usuarios, recursos compartidos permisos. Un controlador de dominio almacena los datos referentes a este, usuarios, recursos etc y de controlar lo forma en a que estos pueden interactuar entre si, principalmente mediante permisos. Active Directory Certificate Authority: Permite emitir y gestionar certificados digitales utilizados en sistemas de seguridad que emplean tecnolog\u00edas de clave p\u00fablica. Los certificados digitales que AD CS proporciona se pueden utilizar para cifrar y firmar digitalmente documentos y mensajes electr\u00f3nicos. Active Directory: Active Directory o Directorio Activo son los t\u00e9rminos que utiliza Microsoft para referirse a su implementaci\u00f3n de servicio de directorio en una red distribuida de computadoras. Utiliza distintos protocolos, principalmente LDAP, DNS, DHCP y Kerberos Servidor web: Un servidor web o servidor HTTP es un programa inform\u00e1tico que procesa una aplicaci\u00f3n del lado del servidor, realizando conexiones bidireccionales o unidireccionales y s\u00edncronas o as\u00edncronas con el cliente y generando o cediendo una respuesta en cualquier lenguaje o aplicaci\u00f3n del lado del cliente. Servidor HTTP Apache: El servidor HTTP Apache es un servidor web HTTP de c\u00f3digo abierto, para plataformas Unix, Microsoft Windows, Macintosh y otras, que implementa el protocolo HTTP/1.1 y la noci\u00f3n de sitio virtual seg\u00fan la normativa RFC 2616. Certificado web: Es un peque\u00f1o archivo de datos que vincula digitalmente una clave criptogr\u00e1fica con los datos de una organizaci\u00f3n. Una vez instalado en el servidor web, el certificado activa el candado y el protocolo https y, de esta forma, se habilita una conexi\u00f3n segura desde el servidor web hasta el navegador. HTTP: Es un protocolo de la capa de aplicaci\u00f3n para la transmisi\u00f3n de documentos hipermedia, como HTML. Se trata de un protocolo sin estado, lo que significa que el servidor no guarda ning\u00fan dato (estado) entre dos peticiones. HTTPS: El Protocolo seguro de transferencia de hipertexto es un protocolo de aplicaci\u00f3n basado en el protocolo HTTP, destinado a la transferencia segura de datos de hipertexto, es decir, es la versi\u00f3n segura de HTTP. NESSUS: Nessus es un programa de escaneo de vulnerabilidades en diversos sistemas operativos. Consiste en un demonio o diablo, nessusd, que realiza el escaneo en el sistema objetivo, y nessus, el cliente que muestra el avance e informa sobre el estado de los escaneos.","title":"Home"},{"location":"#proyecto-final-fundamentos-de-seguridad","text":"Implementar un dominio en Active Directory. Habilitar Active Directory Certificate Authority. Instalar un servidor web en Linux utilizando Apache. A\u00f1adir este servidor Linux a Active Directory. Generar un certificado utilizando ADCA. Instalar dicho certificado en su servidor Web y habilitar tr\u00e1fico mediante HTTPS. Debe redireccionar el tr\u00e1fico HTTP a HTTPS. Utilizar Nessus para escanear las vulnerabilidades de su servidor. Aplicar las soluciones recomendadas por Nessus para resolver todas las vulnerabilidades m\u00e9dium, high y critical.","title":"Proyecto Final \u2013 Fundamentos de Seguridad"},{"location":"#objetivo","text":"En esta pr\u00e1ctica tiene como objetivo aprender los conocimientos b\u00e1sicos, de como configurar un certificado SSL por medio de la caracter\u00edstica de windows server ( Active Directory Certificate Authority ), muchas personas sabr\u00e1n hacerlo mediante lets encrypt , pero en este caso aprenderemos algo totalmente diferente pero con el mismo resultado.","title":"Objetivo"},{"location":"#definiciones","text":"Dominio: El dominio es la unidad b\u00e1sica encargada de agrupar y de permitir la eficiente gesti\u00f3n de usuarios, recursos compartidos permisos. Un controlador de dominio almacena los datos referentes a este, usuarios, recursos etc y de controlar lo forma en a que estos pueden interactuar entre si, principalmente mediante permisos. Active Directory Certificate Authority: Permite emitir y gestionar certificados digitales utilizados en sistemas de seguridad que emplean tecnolog\u00edas de clave p\u00fablica. Los certificados digitales que AD CS proporciona se pueden utilizar para cifrar y firmar digitalmente documentos y mensajes electr\u00f3nicos. Active Directory: Active Directory o Directorio Activo son los t\u00e9rminos que utiliza Microsoft para referirse a su implementaci\u00f3n de servicio de directorio en una red distribuida de computadoras. Utiliza distintos protocolos, principalmente LDAP, DNS, DHCP y Kerberos Servidor web: Un servidor web o servidor HTTP es un programa inform\u00e1tico que procesa una aplicaci\u00f3n del lado del servidor, realizando conexiones bidireccionales o unidireccionales y s\u00edncronas o as\u00edncronas con el cliente y generando o cediendo una respuesta en cualquier lenguaje o aplicaci\u00f3n del lado del cliente. Servidor HTTP Apache: El servidor HTTP Apache es un servidor web HTTP de c\u00f3digo abierto, para plataformas Unix, Microsoft Windows, Macintosh y otras, que implementa el protocolo HTTP/1.1 y la noci\u00f3n de sitio virtual seg\u00fan la normativa RFC 2616. Certificado web: Es un peque\u00f1o archivo de datos que vincula digitalmente una clave criptogr\u00e1fica con los datos de una organizaci\u00f3n. Una vez instalado en el servidor web, el certificado activa el candado y el protocolo https y, de esta forma, se habilita una conexi\u00f3n segura desde el servidor web hasta el navegador. HTTP: Es un protocolo de la capa de aplicaci\u00f3n para la transmisi\u00f3n de documentos hipermedia, como HTML. Se trata de un protocolo sin estado, lo que significa que el servidor no guarda ning\u00fan dato (estado) entre dos peticiones. HTTPS: El Protocolo seguro de transferencia de hipertexto es un protocolo de aplicaci\u00f3n basado en el protocolo HTTP, destinado a la transferencia segura de datos de hipertexto, es decir, es la versi\u00f3n segura de HTTP. NESSUS: Nessus es un programa de escaneo de vulnerabilidades en diversos sistemas operativos. Consiste en un demonio o diablo, nessusd, que realiza el escaneo en el sistema objetivo, y nessus, el cliente que muestra el avance e informa sobre el estado de los escaneos.","title":"Definiciones"},{"location":"ad/","text":"Implementar un dominio en Active Directory Comenzaremos con el primer t\u00f3pico a realizar, ya teniendo nuestro Windows server 2016 arriba, haciendo uso de Vmware, accederemos al server manager, haremos click en ADD ROLES AND FEATURES * Ya abierto el wizard, daremos click en next 3 veces hasta llegar a la secci\u00f3n de SERVER SELECTION , esto lo haremos ya que las opciones que estamos volando la dejaremos por default. Estando en la seccion de Server Roles marcaremos el rol de ACTIVE DIRECTORY DOMAIN SERVICES . Seleccionado el rol nos aparecer\u00e1 otra ventana donde daremos click en ADD FEATURES. En la secci\u00f3n de FEATURES dejamos todo por default y damos click en next. Ya estando en la secci\u00f3n de CONFIRMATION marcamos la casilla de RESTART para que reinicie el equipo en caso de que sea necesario, hecho esto hacemos click en INSTALL . Ahora vamos a esperar que se complete la instalaci\u00f3n. Terminada la instalaci\u00f3n vamos a dar click en PROMOTE THIS SERVER TO A DOMAIN CONTROLLER Hecho click en la opci\u00f3n anterior se nos abrir\u00e1 una venta para promover nuestro servidor como controlador de dominio, como no tenemos ning\u00fan forest configurado seleccionaremos la opcion ADD A NEW FOREST , y en la seccion ROOT DOMAIN NAME escribiremos el nombre de dominio que queremos tener. En el siguiente paso vamos a indicar la password para el modo de restauraci\u00f3n. En la parte de DNS OPTIONS la dejaremos por default. Ya en ADDITIONAL OPTIONS lo dejaremos por default igualmente y daremos click en next. Las dem\u00e1s opciones la dejaremos por default, por lo tanto daremos click en next hasta llegar a la secci\u00f3n de Prerequisites check. Si tenemos todo bien podemos dar click en Install. Terminada la intalaci\u00f3n nuestro servidor proceder\u00e1 a reiniciarse por lo tanto esperamos a que se complete este proceso y veremos que nuestro AD se ha instalado correctamente.","title":"1.Implementar un dominio en Active Directory"},{"location":"ad/#implementar-un-dominio-en-active-directory","text":"Comenzaremos con el primer t\u00f3pico a realizar, ya teniendo nuestro Windows server 2016 arriba, haciendo uso de Vmware, accederemos al server manager, haremos click en ADD ROLES AND FEATURES * Ya abierto el wizard, daremos click en next 3 veces hasta llegar a la secci\u00f3n de SERVER SELECTION , esto lo haremos ya que las opciones que estamos volando la dejaremos por default. Estando en la seccion de Server Roles marcaremos el rol de ACTIVE DIRECTORY DOMAIN SERVICES . Seleccionado el rol nos aparecer\u00e1 otra ventana donde daremos click en ADD FEATURES. En la secci\u00f3n de FEATURES dejamos todo por default y damos click en next. Ya estando en la secci\u00f3n de CONFIRMATION marcamos la casilla de RESTART para que reinicie el equipo en caso de que sea necesario, hecho esto hacemos click en INSTALL . Ahora vamos a esperar que se complete la instalaci\u00f3n. Terminada la instalaci\u00f3n vamos a dar click en PROMOTE THIS SERVER TO A DOMAIN CONTROLLER Hecho click en la opci\u00f3n anterior se nos abrir\u00e1 una venta para promover nuestro servidor como controlador de dominio, como no tenemos ning\u00fan forest configurado seleccionaremos la opcion ADD A NEW FOREST , y en la seccion ROOT DOMAIN NAME escribiremos el nombre de dominio que queremos tener. En el siguiente paso vamos a indicar la password para el modo de restauraci\u00f3n. En la parte de DNS OPTIONS la dejaremos por default. Ya en ADDITIONAL OPTIONS lo dejaremos por default igualmente y daremos click en next. Las dem\u00e1s opciones la dejaremos por default, por lo tanto daremos click en next hasta llegar a la secci\u00f3n de Prerequisites check. Si tenemos todo bien podemos dar click en Install. Terminada la intalaci\u00f3n nuestro servidor proceder\u00e1 a reiniciarse por lo tanto esperamos a que se complete este proceso y veremos que nuestro AD se ha instalado correctamente.","title":"Implementar un dominio en Active Directory"},{"location":"adac/","text":"Habilitar Active Directory Certificate Authority Como primer paso vamos a ejecutar powershell como administrador, y verificaremos si el rol y sus componentes est\u00e1n disponibles para la instalaci\u00f3n y si est\u00e1n instalados. Get-WindowsFeature | where {$_.name -like \"adcs*\" -or $_.name -like \"ad-c*\"} En mi caso no tengo el rol instalado, por lo tanto vamos a instalar el servicio con el siguiente comando: Install-WindowsFeature adcs-cert-authority \u2013IncludeManagementTools Terminado este proceso nos vamos a dirigir a nuestro SERVER MANAGER veremos la secci\u00f3n de notificaciones con un warning, si damos click en \u00e9l veremos que tiene que ver con nuestro AD AC, daremos click en CONFIGURE ACTIVE DIRECTORY CERTIFICATE SERVICES Abierta la ventana de configuraci\u00f3n, esperamos que cargue y cuando se encuentre lista daremos click en next. Ahora vamos a seleccionar el roles que queremos instalar de este servicio. Como siguiente paso el tipo de setup nuestra ser\u00e1 Standalone CA, dabido a que solo es con motivos pr\u00e1cticos y de estudios. El tipo de CA lo pondremos como ROOT CA Pasaremos a generar nuestra clave privada, ya que no tenemos ninguna dejamos seleccionada la primera opci\u00f3n para crear una nueva. seleccionada la opci\u00f3n damos click en next. Vamos a configurar la criptograf\u00eda de la clave, vamos a dejar todo por defecto en este caso, dejando claro que estos son los par\u00e1metros de seguridad m\u00ednimos recomendados para las claves de cifrado. Ya en el siguiente paso tendremos que especificar el nombre del CA, windows server nos proporciona esta info autom\u00e1ticamente as\u00ed que no tendremos que pasar ning\u00fan par\u00e1metro y dejamos todo como est\u00e1. Hecho click en next, en el siguiente paso tendremos que especificar el tiempo de expiraci\u00f3n del certificado, en nuestro caso lo dejaremos por default que son 5 a\u00f1os. Ya como \u00faltimo paso verificamos que los datos son los que deseamos, si es as\u00ed damos click en configure. Info En esta secci\u00f3n se cumpli\u00f3 con: Generar un certificado utilizando ADCA.","title":"2.Habilitar Active Directory Certificate Authority"},{"location":"adac/#habilitar-active-directory-certificate-authority","text":"Como primer paso vamos a ejecutar powershell como administrador, y verificaremos si el rol y sus componentes est\u00e1n disponibles para la instalaci\u00f3n y si est\u00e1n instalados. Get-WindowsFeature | where {$_.name -like \"adcs*\" -or $_.name -like \"ad-c*\"} En mi caso no tengo el rol instalado, por lo tanto vamos a instalar el servicio con el siguiente comando: Install-WindowsFeature adcs-cert-authority \u2013IncludeManagementTools Terminado este proceso nos vamos a dirigir a nuestro SERVER MANAGER veremos la secci\u00f3n de notificaciones con un warning, si damos click en \u00e9l veremos que tiene que ver con nuestro AD AC, daremos click en CONFIGURE ACTIVE DIRECTORY CERTIFICATE SERVICES Abierta la ventana de configuraci\u00f3n, esperamos que cargue y cuando se encuentre lista daremos click en next. Ahora vamos a seleccionar el roles que queremos instalar de este servicio. Como siguiente paso el tipo de setup nuestra ser\u00e1 Standalone CA, dabido a que solo es con motivos pr\u00e1cticos y de estudios. El tipo de CA lo pondremos como ROOT CA Pasaremos a generar nuestra clave privada, ya que no tenemos ninguna dejamos seleccionada la primera opci\u00f3n para crear una nueva. seleccionada la opci\u00f3n damos click en next. Vamos a configurar la criptograf\u00eda de la clave, vamos a dejar todo por defecto en este caso, dejando claro que estos son los par\u00e1metros de seguridad m\u00ednimos recomendados para las claves de cifrado. Ya en el siguiente paso tendremos que especificar el nombre del CA, windows server nos proporciona esta info autom\u00e1ticamente as\u00ed que no tendremos que pasar ning\u00fan par\u00e1metro y dejamos todo como est\u00e1. Hecho click en next, en el siguiente paso tendremos que especificar el tiempo de expiraci\u00f3n del certificado, en nuestro caso lo dejaremos por default que son 5 a\u00f1os. Ya como \u00faltimo paso verificamos que los datos son los que deseamos, si es as\u00ed damos click en configure. Info En esta secci\u00f3n se cumpli\u00f3 con: Generar un certificado utilizando ADCA.","title":"Habilitar Active Directory Certificate Authority"},{"location":"ins-apache/","text":"Instalar un servidor web en Linux utilizando Apache Instalaci\u00f3n Procedemos a instalar nuestro servicio httpd que corresponde al servicio de Apache, cabe destacar que la instalaci\u00f3n se realizar\u00e1 en CENTOS 7 , para instalar el servicio ejecutamos el siguiente comando: yum -y install httpd Como esto no es un serv en producci\u00f3n vamos a deshabilitar selinux en este caso, este proceso no es recomendable realizarlo en entornos reales, los comando que utilizaremos son los siguientes. setenforce 0 sed -i 's/enforcing/disabled/' /etc/sysconfig/selinux sed -i 's/enforcing/disabled/' /etc/selinux/config Ahora vamos abrir los puertos en nuestro en firewall, en nuestro caso como es un servidor web abriremos los puertos 80, 443, haremos uso del siguiente comando. firewall-cmd --permanent --add-port=80/tcp firewall-cmd --permanent --add-port=443/tcp firewall-cmd --reload El siguiente paso seria configurar apache para que inicie con el sistema, para esto tenemos que iniciar el servicio y luego pasar el parametro de enable. systemctl start httpd systemctl enable httpd Creaci\u00f3n de directorios Ya que tendremos una configuraci\u00f3n basada en VirtualHost, debemos crear el directorio el cual ser\u00e1 manejado por el VirtualHost. mkdir -p /var/www/nombre_de_tu_directorio # EJEMPLO mkdir -p /var/www/jamiel/public_html Ahora ya que tenemos el fichero creado tendremos que asignar el usuario Apache como due\u00f1o de dicho directorio, y para lograr esto utilizaremos los siguientes comandos. chown -R apache. /var/www/ chmod -R 755 /var/www/tu_directorio # EJEMPLO: chmod -R 755 /var/www/jamiel/ Ahora vamos a configurar los directorios que manejaran los VirtualHost. mkdir /etc/httpd/sites-available mkdir /etc/httpd/sites-enabled Configurar .conf del VirtualHost Accederemos al directorio sites-available y crearemos un archivo .conf, con el nombre preferiblemente del directorio que contiene todo lo referente a la web. cd /etc/httpd/sites-available/ nano {nombre_de_tu_gusto.conf} # EJEMPLO: nano jamiel.conf # Dentro del archivo lo siguiente <VirtualHost *:80> ServerName {IP O DOMINIO} DocumentRoot /var/www/{nombre de tu dir} # EJEMPLO: DocumentRoot /var/www/jamiel/public_html ErrorLog /var/www/{tu dir}/error.log # EJEMPLO: ErrorLog /var/www/jamiel/error.log CustomLog /var/www/{tu dir}/access.log combined </Virtualhost> Creado todo esto crearemos un enlace simb\u00f3lico hacia el sites-enable, esto lo haremos aplicando el siguiente comando. ln -s /etc/httpd/sites-available/{tu file}.conf /etc/httpd/sites-enabled/{tu file}.conf Como \u00faltimo paso de esta conf solo nos queda reiniciar el servicio http. systemctl restart httpd.service Accedemos a la web y vemos que si hemos realizado los pasos correctamente todo funciona a la perfecci\u00f3n.","title":"3.Instalar un servidor web en Linux utilizando Apache"},{"location":"ins-apache/#instalar-un-servidor-web-en-linux-utilizando-apache","text":"","title":"Instalar un servidor web en Linux utilizando Apache"},{"location":"ins-apache/#instalacion","text":"Procedemos a instalar nuestro servicio httpd que corresponde al servicio de Apache, cabe destacar que la instalaci\u00f3n se realizar\u00e1 en CENTOS 7 , para instalar el servicio ejecutamos el siguiente comando: yum -y install httpd Como esto no es un serv en producci\u00f3n vamos a deshabilitar selinux en este caso, este proceso no es recomendable realizarlo en entornos reales, los comando que utilizaremos son los siguientes. setenforce 0 sed -i 's/enforcing/disabled/' /etc/sysconfig/selinux sed -i 's/enforcing/disabled/' /etc/selinux/config Ahora vamos abrir los puertos en nuestro en firewall, en nuestro caso como es un servidor web abriremos los puertos 80, 443, haremos uso del siguiente comando. firewall-cmd --permanent --add-port=80/tcp firewall-cmd --permanent --add-port=443/tcp firewall-cmd --reload El siguiente paso seria configurar apache para que inicie con el sistema, para esto tenemos que iniciar el servicio y luego pasar el parametro de enable. systemctl start httpd systemctl enable httpd","title":"Instalaci\u00f3n"},{"location":"ins-apache/#creacion-de-directorios","text":"Ya que tendremos una configuraci\u00f3n basada en VirtualHost, debemos crear el directorio el cual ser\u00e1 manejado por el VirtualHost. mkdir -p /var/www/nombre_de_tu_directorio # EJEMPLO mkdir -p /var/www/jamiel/public_html Ahora ya que tenemos el fichero creado tendremos que asignar el usuario Apache como due\u00f1o de dicho directorio, y para lograr esto utilizaremos los siguientes comandos. chown -R apache. /var/www/ chmod -R 755 /var/www/tu_directorio # EJEMPLO: chmod -R 755 /var/www/jamiel/ Ahora vamos a configurar los directorios que manejaran los VirtualHost. mkdir /etc/httpd/sites-available mkdir /etc/httpd/sites-enabled","title":"Creaci\u00f3n de directorios"},{"location":"ins-apache/#configurar-conf-del-virtualhost","text":"Accederemos al directorio sites-available y crearemos un archivo .conf, con el nombre preferiblemente del directorio que contiene todo lo referente a la web. cd /etc/httpd/sites-available/ nano {nombre_de_tu_gusto.conf} # EJEMPLO: nano jamiel.conf # Dentro del archivo lo siguiente <VirtualHost *:80> ServerName {IP O DOMINIO} DocumentRoot /var/www/{nombre de tu dir} # EJEMPLO: DocumentRoot /var/www/jamiel/public_html ErrorLog /var/www/{tu dir}/error.log # EJEMPLO: ErrorLog /var/www/jamiel/error.log CustomLog /var/www/{tu dir}/access.log combined </Virtualhost> Creado todo esto crearemos un enlace simb\u00f3lico hacia el sites-enable, esto lo haremos aplicando el siguiente comando. ln -s /etc/httpd/sites-available/{tu file}.conf /etc/httpd/sites-enabled/{tu file}.conf Como \u00faltimo paso de esta conf solo nos queda reiniciar el servicio http. systemctl restart httpd.service Accedemos a la web y vemos que si hemos realizado los pasos correctamente todo funciona a la perfecci\u00f3n.","title":"Configurar .conf del VirtualHost"},{"location":"nessus/","text":"Utilizar Nessus para escanear las vulnerabilidades de su servidor Ya teniendo listo nuestro Nessus le haremos un SCAN a nuestro servidor web para ver que resultados nos da sobre nuestro servidor y as\u00ed de esta marena buscarle una soluci\u00f3n a los errores mostrados. En el caso de este proyecto estaremos resolviendo solo los problemas (medium, hight y critical). En mi caso en el informe tuve hallazgos medios y hight, los cuales fueron los siguientes. Click aqu\u00ed para ver el informe Ahora vamos a presentar la soluci\u00f3n a cada uno de los problemas. TLS Version 1.0 Protocol Detection Este es un problema que se da mucho en los servidores web que no tienen un buen hardening implementado, y es causado debido a que el servicio remoto acepta conexiones cifradas mediante TLS 1.0. TLS 1.0 tiene una serie de defectos de dise\u00f1o criptogr\u00e1fico. Las implementaciones modernas de TLS 1.0 mitigan estos problemas, pero las versiones m\u00e1s recientes de TLS, como la 1.2 y la 1.3, est\u00e1n dise\u00f1adas contra estos fallos y deber\u00edan utilizarse siempre que sea posible. Soluci\u00f3n Simplemente tendremos que dirigirnos a nuestro archivo ssl.conf que en mi caso y seguramente en el de ustedes este archivo se encuentre en la ruta /etc/httpd/conf.d/ssl.conf abrimos este archivo en mi caso con nano nano /etc/httpd/conf.d/ssl.conf Aqu\u00ed vamos poner lo siguiente. SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1 Esto desactivar\u00e1 las versiones inseguras de TLS en la web, a mi me qued\u00f3 de la siguiente manera. Hay que tener en cuenta que la \u00faltima linea de este file es y por lo tanto todos los par\u00e1metros que vayamos a agregar deben ir antes de esta l\u00ednea. SSL Certificate Cannot Be Trusted and SSL Self-Signed Certificate Estos problemas simplemente los vamos a obviar debido que surgen por que tenemos un certificado autofirmadoo, y al no venir de una entidad de confianza nos detecta el certificado firmado por una entidad no autorizada. Soluci\u00f3n La simple y llana soluci\u00f3n a este problema, es adquirir un certificado de una entidad verdaderamente certificadora. SSL Medium Strength Cipher Suites Supported (SWEET32) Esta fue la problem\u00e1tica m\u00e1s alta con la que me encontr\u00e9 la cual es nivel Hight, pero su soluci\u00f3n es muy simple. Este problema surge debido a que el host remoto admite el uso de cifrados SSL que ofrecen un cifrado de fuerza media. Nessus considera que un cifrado de fuerza media es cualquier cifrado que utilice longitudes de clave de al menos 64 bits y menos de 112 bits, o bien que utilice el conjunto de cifrado 3DES. Esto es f\u00e1cil de resolver entre comillas debido a que son unos par\u00e1metros un poco largos, pero hoy en d\u00eda todo est\u00e1 en internet :) Nos vamos a fijar en el output que nos lanz\u00f3 Nessus de los cifrados poco seguros que \u00e9l encontr\u00f3. Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES) Name Code KEX Auth Encryption MAC ---------------------- ---------- --- ---- --------------------- --- EDH-RSA-DES-CBC3-SHA 0x00, 0x16 DH RSA 3DES-CBC(168) SHA1 ECDHE-RSA-DES-CBC3-SHA 0xC0, 0x12 ECDH RSA 3DES-CBC(168) SHA1 DES-CBC3-SHA 0x00, 0x0A RSA RSA 3DES-CBC(168) SHA1 The fields above are : {Tenable ciphername} {Cipher ID code} Kex={key exchange} Auth={authentication} Encrypt={symmetric encryption method} MAC={message authentication code} {export flag} Visto los cifrados poco seguros que nos recomienda Nessus no admitir en nuestra web, haremos lo siguiente. Vamos a nuestro archivo ssl.conf que mencionamos anteriormente, y agregamos la siguiente l\u00ednea SSLCipherSuite ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GC$ SSLHonorCipherOrder on SSLCompression off SSLSessionTickets off Estos p\u00e1metros nos ayudar\u00e1n a deshabilitar los cifrados no seguros que se vieron en el output de Nessus, Lo que hicimos aqu\u00ed fue permitir todos los otros que Nessus no considera inseguros sin incluir lo que Nessus nos indic\u00f3. Nuestro archivo ssl.conf quedar\u00e1 en las \u00faltima l\u00edneas de la siguiente manera. Hecho todo esto podemos decir que tenemos todo resuelto sobre los problemas que encontramos, por lo tanto solo nos queda reiniciar el servicio httpd que corresponde a apache, esto lo haremos con el comando. systemctl restart httpd y si no hemos recibido ning\u00fan output durante la ejecuci\u00f3n del comando significa que todo est\u00e1 bien, de todas formas accedan a la web para confirmar que todo est\u00e1 bien. Si todo est\u00e1 correcto vuelven a realizar el mismo scan a su servidor web y veremos los resultados, los mios fueron los siguientes. Click aqu\u00ed para ver mi reporte Si ven mi reporte podemos notar que todo se ha solucionado a la perfecci\u00f3n mejor la problem\u00e1tica del certificado que debe ser proveniente de una entidad autorizada.","title":"6.Utilizar Nessus para escanear las vulnerabilidades de su servidor"},{"location":"nessus/#utilizar-nessus-para-escanear-las-vulnerabilidades-de-su-servidor","text":"Ya teniendo listo nuestro Nessus le haremos un SCAN a nuestro servidor web para ver que resultados nos da sobre nuestro servidor y as\u00ed de esta marena buscarle una soluci\u00f3n a los errores mostrados. En el caso de este proyecto estaremos resolviendo solo los problemas (medium, hight y critical). En mi caso en el informe tuve hallazgos medios y hight, los cuales fueron los siguientes. Click aqu\u00ed para ver el informe Ahora vamos a presentar la soluci\u00f3n a cada uno de los problemas.","title":"Utilizar Nessus para escanear las vulnerabilidades de su servidor"},{"location":"nessus/#tls-version-10-protocol-detection","text":"Este es un problema que se da mucho en los servidores web que no tienen un buen hardening implementado, y es causado debido a que el servicio remoto acepta conexiones cifradas mediante TLS 1.0. TLS 1.0 tiene una serie de defectos de dise\u00f1o criptogr\u00e1fico. Las implementaciones modernas de TLS 1.0 mitigan estos problemas, pero las versiones m\u00e1s recientes de TLS, como la 1.2 y la 1.3, est\u00e1n dise\u00f1adas contra estos fallos y deber\u00edan utilizarse siempre que sea posible.","title":"TLS Version 1.0 Protocol Detection"},{"location":"nessus/#solucion","text":"Simplemente tendremos que dirigirnos a nuestro archivo ssl.conf que en mi caso y seguramente en el de ustedes este archivo se encuentre en la ruta /etc/httpd/conf.d/ssl.conf abrimos este archivo en mi caso con nano nano /etc/httpd/conf.d/ssl.conf Aqu\u00ed vamos poner lo siguiente. SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1 Esto desactivar\u00e1 las versiones inseguras de TLS en la web, a mi me qued\u00f3 de la siguiente manera. Hay que tener en cuenta que la \u00faltima linea de este file es y por lo tanto todos los par\u00e1metros que vayamos a agregar deben ir antes de esta l\u00ednea.","title":"Soluci\u00f3n"},{"location":"nessus/#ssl-certificate-cannot-be-trusted-and-ssl-self-signed-certificate","text":"Estos problemas simplemente los vamos a obviar debido que surgen por que tenemos un certificado autofirmadoo, y al no venir de una entidad de confianza nos detecta el certificado firmado por una entidad no autorizada.","title":"SSL Certificate Cannot Be Trusted and SSL Self-Signed Certificate"},{"location":"nessus/#solucion_1","text":"La simple y llana soluci\u00f3n a este problema, es adquirir un certificado de una entidad verdaderamente certificadora.","title":"Soluci\u00f3n"},{"location":"nessus/#ssl-medium-strength-cipher-suites-supported-sweet32","text":"Esta fue la problem\u00e1tica m\u00e1s alta con la que me encontr\u00e9 la cual es nivel Hight, pero su soluci\u00f3n es muy simple. Este problema surge debido a que el host remoto admite el uso de cifrados SSL que ofrecen un cifrado de fuerza media. Nessus considera que un cifrado de fuerza media es cualquier cifrado que utilice longitudes de clave de al menos 64 bits y menos de 112 bits, o bien que utilice el conjunto de cifrado 3DES. Esto es f\u00e1cil de resolver entre comillas debido a que son unos par\u00e1metros un poco largos, pero hoy en d\u00eda todo est\u00e1 en internet :) Nos vamos a fijar en el output que nos lanz\u00f3 Nessus de los cifrados poco seguros que \u00e9l encontr\u00f3. Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES) Name Code KEX Auth Encryption MAC ---------------------- ---------- --- ---- --------------------- --- EDH-RSA-DES-CBC3-SHA 0x00, 0x16 DH RSA 3DES-CBC(168) SHA1 ECDHE-RSA-DES-CBC3-SHA 0xC0, 0x12 ECDH RSA 3DES-CBC(168) SHA1 DES-CBC3-SHA 0x00, 0x0A RSA RSA 3DES-CBC(168) SHA1 The fields above are : {Tenable ciphername} {Cipher ID code} Kex={key exchange} Auth={authentication} Encrypt={symmetric encryption method} MAC={message authentication code} {export flag} Visto los cifrados poco seguros que nos recomienda Nessus no admitir en nuestra web, haremos lo siguiente. Vamos a nuestro archivo ssl.conf que mencionamos anteriormente, y agregamos la siguiente l\u00ednea SSLCipherSuite ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GC$ SSLHonorCipherOrder on SSLCompression off SSLSessionTickets off Estos p\u00e1metros nos ayudar\u00e1n a deshabilitar los cifrados no seguros que se vieron en el output de Nessus, Lo que hicimos aqu\u00ed fue permitir todos los otros que Nessus no considera inseguros sin incluir lo que Nessus nos indic\u00f3. Nuestro archivo ssl.conf quedar\u00e1 en las \u00faltima l\u00edneas de la siguiente manera. Hecho todo esto podemos decir que tenemos todo resuelto sobre los problemas que encontramos, por lo tanto solo nos queda reiniciar el servicio httpd que corresponde a apache, esto lo haremos con el comando. systemctl restart httpd y si no hemos recibido ning\u00fan output durante la ejecuci\u00f3n del comando significa que todo est\u00e1 bien, de todas formas accedan a la web para confirmar que todo est\u00e1 bien. Si todo est\u00e1 correcto vuelven a realizar el mismo scan a su servidor web y veremos los resultados, los mios fueron los siguientes. Click aqu\u00ed para ver mi reporte Si ven mi reporte podemos notar que todo se ha solucionado a la perfecci\u00f3n mejor la problem\u00e1tica del certificado que debe ser proveniente de una entidad autorizada.","title":"SSL Medium Strength Cipher Suites Supported (SWEET32)"},{"location":"pass_cert/","text":"Instalar dicho certificado en su servidor Web y habilitar tr\u00e1fico mediante HTTPS Vamos primeramente a exportar el certificado al formato PFX desde windows server. Abriremos nuestro mmc.exe procederemos a seguir los pasos de las imagenes mostradas. Ya teniendo los resultados de los certificados, accederemos a los certificados personales que hemos generado. Ya estando en el path del certificado, daremos click derecho en la cert > All Task > Export Hecho esto se nos abrir\u00e1 el wizarrd para exportar los certificados, r\u00e1pidamente daremos click en next. En esta secci\u00f3n tendremos que tener pendiente, la password que asignemos ya que es la que utilizaremos m\u00e1s adelante con openssl. Ahora como \u00faltimo paso vamos a seleccionar el fichero donde queremos que se guarde el archivo. Nos muestra los settings que hemos configurado para la exportaci\u00f3n, si vemos que todo se encuentra bien damos click en Finish. Pasar la cert a Linux Apache Ahora vamos a buscar la manera de pasar el certificado a nuestro servidor web linux, para luego proceder con la instalaci\u00f3n del Certificado en nuestro serv web. El m\u00e9todo que hemos utilizado es crear una carpeta compartida que nos permita obtenter el certificado en nuestro server web. En nuestro server manager daremos doble click en File an Storage Services , entrando en esta secci\u00f3n hacemos click en shares , estando en shares daremos click derecho, y luego daremos click en New share , haremos el setup que es muy f\u00e1cil de hacer. Creado la carpeta compartida, vamos a pasar la cert que creamos anteriormente y lo ponemos en nuestra carperta compartida. Conectar linux a carpeta compartida En nuestro caso estamos usando Centos 7 como servidor web, para poder acceder a la carpeta compartida tendremos que descargar un paquete llamado smbclient , esto lo haremos con el siguiente comando. yum install smbclient -y Ya instalado este paquete nos podemos conectar a la carpeta de la siguiente manera. smbclient -U {user} {PATH} # smbclient -U Administrator //10.0.0.90/cert Ya confirmamos que podemos acceder ahora salimos de ese modo y vamos a copiar el certificado directamente a nuestro linux. smbget -R -U {USER} smb:{PATH} # EJEMPLO # smbget -R -U administrator smb://10.0.0.90/cert/ Generar clacves SSL Obtenido el file pfx , vamos a proceder a genernar los archivos necesearios para que nuestra web corra correctamente por medio de https. 1.Exportar la llave privada del fichero pfx. openssl pkcs12 -in fichero_exportado_de_iis.pfx -nocerts -out ca.pem 2.Exportar el certificado del fichero pfx openssl pkcs12 -in fichero_exportado_de_iis.pfx -clcerts -nokeys -out cert.pem 3.Eliminar la clave que se adjunta a la clave privada, para que Apache no pregunte por la misma cuando arranca. openssl rsa -in ca.pem -out private.key Obtenido estos archivos ahora nos toca agregarlos a nuestro virtualhost de la siguiente manera, incluido a esto pondremos una redirecci\u00f3n obligatoria de HTTP --> HTTPS. <VirtualHost *:80> ServerName 10.0.0.50 # aqu\u00ed pueden poner su FQDN o la ip de su serv web ErrorLog /var/www/jamiel/error.log CustomLog /var/www/jamiel/access.log combined Redirect permanent / https://10.0.0.50/ # Esta linea es la que forza la redirecci\u00f3n </Virtualhost> <VirtualHost _default_:443> SSLEngine On DocumentRoot /var/www/jamiel/public_html ServerName 10.0.0.50 # RUTA DE LOS FILES GENERADOS ANTERIORMENTE SSLCertificateKeyFile /etc/ssl/localcerts/private.key SSLCertificateFile /etc/ssl/localcerts/cert.pem SSLCertificateChainFile /etc/ssl/localcerts/ca.pem # Par\u00e1metros adicionales para lograr la conexi\u00f3n https SSLVerifyDepth 5 SSLVerifyClient none </VirtualHost> Verificando configuraci\u00f3n En este momento vamos reiniciar el servicio de Apache con el comando. systemctl restart httpd Este comando es m\u00e1s que suficiente para reiniciar el servicio, si todo anta bien el comando se deber\u00eda ejecutar sin ning\u00fan output y una vez reiniciado podremos acceder a la web para ver el resultado. Vemos como con solo tipiar la ip de nuestro servidor nos hace la redirecci\u00f3n a HTTPS, sin ning\u00fan problema. Nuestra web es vista como no segura debido a que el certificado es autofirmado, pero de igual forma el contenido viaja en https.","title":"5.Instalar dicho certificado en su servidor Web y habilitar tr\u00e1fico mediante HTTPS"},{"location":"pass_cert/#instalar-dicho-certificado-en-su-servidor-web-y-habilitar-trafico-mediante-https","text":"Vamos primeramente a exportar el certificado al formato PFX desde windows server. Abriremos nuestro mmc.exe procederemos a seguir los pasos de las imagenes mostradas. Ya teniendo los resultados de los certificados, accederemos a los certificados personales que hemos generado. Ya estando en el path del certificado, daremos click derecho en la cert > All Task > Export Hecho esto se nos abrir\u00e1 el wizarrd para exportar los certificados, r\u00e1pidamente daremos click en next. En esta secci\u00f3n tendremos que tener pendiente, la password que asignemos ya que es la que utilizaremos m\u00e1s adelante con openssl. Ahora como \u00faltimo paso vamos a seleccionar el fichero donde queremos que se guarde el archivo. Nos muestra los settings que hemos configurado para la exportaci\u00f3n, si vemos que todo se encuentra bien damos click en Finish.","title":"Instalar dicho certificado en su servidor Web y habilitar tr\u00e1fico mediante HTTPS"},{"location":"pass_cert/#pasar-la-cert-a-linux-apache","text":"Ahora vamos a buscar la manera de pasar el certificado a nuestro servidor web linux, para luego proceder con la instalaci\u00f3n del Certificado en nuestro serv web. El m\u00e9todo que hemos utilizado es crear una carpeta compartida que nos permita obtenter el certificado en nuestro server web. En nuestro server manager daremos doble click en File an Storage Services , entrando en esta secci\u00f3n hacemos click en shares , estando en shares daremos click derecho, y luego daremos click en New share , haremos el setup que es muy f\u00e1cil de hacer. Creado la carpeta compartida, vamos a pasar la cert que creamos anteriormente y lo ponemos en nuestra carperta compartida.","title":"Pasar la cert a Linux Apache"},{"location":"pass_cert/#conectar-linux-a-carpeta-compartida","text":"En nuestro caso estamos usando Centos 7 como servidor web, para poder acceder a la carpeta compartida tendremos que descargar un paquete llamado smbclient , esto lo haremos con el siguiente comando. yum install smbclient -y Ya instalado este paquete nos podemos conectar a la carpeta de la siguiente manera. smbclient -U {user} {PATH} # smbclient -U Administrator //10.0.0.90/cert Ya confirmamos que podemos acceder ahora salimos de ese modo y vamos a copiar el certificado directamente a nuestro linux. smbget -R -U {USER} smb:{PATH} # EJEMPLO # smbget -R -U administrator smb://10.0.0.90/cert/","title":"Conectar linux a carpeta compartida"},{"location":"pass_cert/#generar-clacves-ssl","text":"Obtenido el file pfx , vamos a proceder a genernar los archivos necesearios para que nuestra web corra correctamente por medio de https. 1.Exportar la llave privada del fichero pfx. openssl pkcs12 -in fichero_exportado_de_iis.pfx -nocerts -out ca.pem 2.Exportar el certificado del fichero pfx openssl pkcs12 -in fichero_exportado_de_iis.pfx -clcerts -nokeys -out cert.pem 3.Eliminar la clave que se adjunta a la clave privada, para que Apache no pregunte por la misma cuando arranca. openssl rsa -in ca.pem -out private.key Obtenido estos archivos ahora nos toca agregarlos a nuestro virtualhost de la siguiente manera, incluido a esto pondremos una redirecci\u00f3n obligatoria de HTTP --> HTTPS. <VirtualHost *:80> ServerName 10.0.0.50 # aqu\u00ed pueden poner su FQDN o la ip de su serv web ErrorLog /var/www/jamiel/error.log CustomLog /var/www/jamiel/access.log combined Redirect permanent / https://10.0.0.50/ # Esta linea es la que forza la redirecci\u00f3n </Virtualhost> <VirtualHost _default_:443> SSLEngine On DocumentRoot /var/www/jamiel/public_html ServerName 10.0.0.50 # RUTA DE LOS FILES GENERADOS ANTERIORMENTE SSLCertificateKeyFile /etc/ssl/localcerts/private.key SSLCertificateFile /etc/ssl/localcerts/cert.pem SSLCertificateChainFile /etc/ssl/localcerts/ca.pem # Par\u00e1metros adicionales para lograr la conexi\u00f3n https SSLVerifyDepth 5 SSLVerifyClient none </VirtualHost>","title":"Generar clacves SSL"},{"location":"pass_cert/#verificando-configuracion","text":"En este momento vamos reiniciar el servicio de Apache con el comando. systemctl restart httpd Este comando es m\u00e1s que suficiente para reiniciar el servicio, si todo anta bien el comando se deber\u00eda ejecutar sin ning\u00fan output y una vez reiniciado podremos acceder a la web para ver el resultado. Vemos como con solo tipiar la ip de nuestro servidor nos hace la redirecci\u00f3n a HTTPS, sin ning\u00fan problema. Nuestra web es vista como no segura debido a que el certificado es autofirmado, pero de igual forma el contenido viaja en https.","title":"Verificando configuraci\u00f3n"},{"location":"recursos/","text":"Links Estos fueron algunos de los links que me ayudaron a darle forma a este proyecto :) https://blog.soporteti.net/windows-server-2012-repaso-que-es-un-dominio-definicion/ https://www.lynt.com.ar/noticia.php?id=188 https://es.wikipedia.org/wiki/Active_Directory https://es.wikipedia.org/wiki/Servidor_HTTP_Apache https://es.wikipedia.org/wiki/Nessus https://www.ssl.com/guide/disable-tls-1-0-and-1-1-apache-nginx/ https://canalticpe.wordpress.com/2018/12/09/apache-y-virtual-host-en-centos-7/","title":"7.Recursos"},{"location":"recursos/#links","text":"Estos fueron algunos de los links que me ayudaron a darle forma a este proyecto :) https://blog.soporteti.net/windows-server-2012-repaso-que-es-un-dominio-definicion/ https://www.lynt.com.ar/noticia.php?id=188 https://es.wikipedia.org/wiki/Active_Directory https://es.wikipedia.org/wiki/Servidor_HTTP_Apache https://es.wikipedia.org/wiki/Nessus https://www.ssl.com/guide/disable-tls-1-0-and-1-1-apache-nginx/ https://canalticpe.wordpress.com/2018/12/09/apache-y-virtual-host-en-centos-7/","title":"Links"},{"location":"unir_linux/","text":"A\u00f1adir este servidor Linux a Active Directory Instalaci\u00f3n y configuraci\u00f3n Esto es un proceso no muy dif\u00edcil de realizar. Primero tendremos que configurarle un hostname al equipo linux, esto lo hacemos con el siguiente comando. hostname {nombre deseado} # hostname CENTOS Ahora comenzaremos instalando las siguientes dependencias. yum install realmd sssd ntpdate ntp oddjob oddjob-mkhomedir sssd samba-common-tools Ya instaladas las dependencias procedemos a a\u00f1adir el CENTOS a AD, con los siguientes comandos. realm join --user=administrator@{DOMINIO} {DOMINIO} # EJEMPLO realm join --user=administrator@jamiel.com jamiel.com Verificaci\u00f3n Hecho los pasos anteriores y vemos que nada nos ha lanzado ning\u00fan error procedemos a verificar en nuestro AD si el equipo se ha agregado exitosamente. Como vemos en la imagen todo ha salido a la perfecci\u00f3n.","title":"4.A\u00f1adir este servidor Linux a Active Directory"},{"location":"unir_linux/#anadir-este-servidor-linux-a-active-directory","text":"","title":"A\u00f1adir este servidor Linux a Active Directory"},{"location":"unir_linux/#instalacion-y-configuracion","text":"Esto es un proceso no muy dif\u00edcil de realizar. Primero tendremos que configurarle un hostname al equipo linux, esto lo hacemos con el siguiente comando. hostname {nombre deseado} # hostname CENTOS Ahora comenzaremos instalando las siguientes dependencias. yum install realmd sssd ntpdate ntp oddjob oddjob-mkhomedir sssd samba-common-tools Ya instaladas las dependencias procedemos a a\u00f1adir el CENTOS a AD, con los siguientes comandos. realm join --user=administrator@{DOMINIO} {DOMINIO} # EJEMPLO realm join --user=administrator@jamiel.com jamiel.com","title":"Instalaci\u00f3n y configuraci\u00f3n"},{"location":"unir_linux/#verificacion","text":"Hecho los pasos anteriores y vemos que nada nos ha lanzado ning\u00fan error procedemos a verificar en nuestro AD si el equipo se ha agregado exitosamente. Como vemos en la imagen todo ha salido a la perfecci\u00f3n.","title":"Verificaci\u00f3n"}]}